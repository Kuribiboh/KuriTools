{\rtf1\ansi\ansicpg1252\cocoartf2821
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 param (\
    [string]$BasePath = $PSScriptRoot # Fallback if run manually\
)\
\
# KuriTools Repository Information\
$repoOwner = "Kuribiboh"\
$repoName = "KuriTools"\
$apiUrl = "https://api.github.com/repos/$repoOwner/$repoName/releases/latest"\
$targetDir = "$BasePath"\
$workingDir = "$BasePath\\Temp"\
$tempZip = "$workingDir\\KuriTools.zip"\
\
# Ensure working and target directories exist\
New-Item -ItemType Directory -Force -Path $workingDir | Out-Null\
New-Item -ItemType Directory -Force -Path $targetDir | Out-Null\
\
# Retrieve the latest release information from GitHub\
try \{\
    $releaseInfo = Invoke-RestMethod -Uri $apiUrl -Headers @\{ "User-Agent" = "PowerShell" \}\
    $zipAsset = $releaseInfo.assets | Where-Object \{ $_.name -like "*.zip" \} | Select-Object -First 1\
    if (-not $zipAsset) \{\
        Write-Host "\uc0\u10060  No ZIP asset found in the latest release."\
        exit\
    \}\
    $downloadUrl = $zipAsset.browser_download_url\
\} catch \{\
    Write-Host "\uc0\u10060  Failed to retrieve KuriTools release information from GitHub."\
    exit\
\}\
\
# Download the ZIP file\
try \{\
    Invoke-WebRequest -Uri $downloadUrl -OutFile $tempZip\
    Write-Host "\uc0\u9989  KuriTools ZIP downloaded from: $downloadUrl"\
\} catch \{\
    Write-Host "\uc0\u10060  Failed to download KuriTools ZIP."\
    exit\
\}\
\
# Extract the ZIP contents to the target directory\
try \{\
    Expand-Archive -Path $tempZip -DestinationPath $targetDir -Force\
    Write-Host "\uc0\u9989  KuriTools extracted to: $targetDir"\
\} catch \{\
    Write-Host "\uc0\u10060  Failed to extract KuriTools ZIP."\
    exit\
\}\
\
# Clean up temporary files\
Remove-Item -Recurse -Force -ErrorAction SilentlyContinue $workingDir\
Write-Host "\uc0\u9989  Temporary files cleaned up."}